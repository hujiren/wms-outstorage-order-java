<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.apl.wms.outstorage.operator.mapper.PullBatchMapper">


    <!-- 根据批次id查找批次信息详情 2020-06-08-->
    <select id="getById" resultType="com.apl.wms.outstorage.operator.pojo.vo.PullBatchInfoVo">
        SELECT
          id, 
          batch_sn, 
          pull_operator_id, 
          pull_finish_time, 
          sorting_operator_id,
          sorting_finish_time, 
          pull_status, 
          cr_time
        FROM
          pull_batch
        where
          id = #{id}
    </select>

    <!-- 查找列表 2020-06-08-->
    <select id="getList" resultType="com.apl.wms.outstorage.operator.pojo.vo.PullBatchListVo">
        SELECT
           id, 
           batch_sn, 
           pull_operator_id, 
           pull_finish_time, 
           sorting_operator_id,
           sorting_finish_time, 
           pull_status, 
           cr_time
        FROM
           pull_batch
        where
        1 = 1
        order by id desc
    </select>

    <select id="listOperatorBatchByStatus" resultType="com.apl.wms.outstorage.operator.pojo.vo.PullBatchInfoVo">
        SELECT DISTINCT
            pb.id id,
            pb.batch_sn,
            pb.cr_time
        FROM
            pull_batch pb
            LEFT JOIN pull_batch_order pbo on pb.id = pbo.batch_id
            LEFT JOIN out_order oo on pbo.order_id = oo.id
            <if test="keyword != null and keyword != ''">
                AND locate(#{keyword}, oo.order_sn)>0
            </if>
        WHERE
            pb.pull_operator_id = #{operatorId}
            AND pb.pull_status = #{status}
            AND pb.cr_time > #{batchTime}
            AND oo.order_sn IS NOT NULL
    </select>



    <select id="getBatchOrderList" resultType="long">
        SELECT
            distinct order_id
        FROM
            pull_batch_order

        WHERE
            batch_id = #{batchId}
    </select>


    <insert id="insertBatchOrderIds">

        <foreach collection="list" index="" close="" open="" item="row" separator=";">
            insert into pull_batch_order (id, batch_id, order_id) values (#{row.id}, #{row.batchId}, #{row.orderId})
        </foreach>

    </insert>

    <insert id="insertPullBatch">
        insert into pull_batch(id, batch_index, batch_sn, wh_id, pull_operator_id, pull_status, cr_time) values
        (${pullBatchPo.id}, ${pullBatchPo.batchIndex}, #{pullBatchPo.batchSn}, ${pullBatchPo.whId}, ${pullBatchPo.pullOperatorId},
        ${pullBatchPo.pullStatus}, #{pullBatchPo.crTime})
    </insert>

    <select id="getOrderIdByBatchId" resultType="java.lang.Long">
        select order_id from pull_batch_order where batch_id = #{batchId}
    </select>

    <select id="getOrderInfoByIds" resultType="com.apl.wms.outstorage.order.pojo.po.OutOrderPo">
        select id, order_sn from out_order where id in
        <foreach collection="ids" index="" separator="," item="row" open="(" close=")">
            #{row}
         </foreach>
    </select>


    <update id="updateOrderStatus">
        update out_order set pull_status = #{pullStatus}
        where id in (${ids})
        <if test="maxKey > 0 and minKey > 0">
            and id between #{minKey} and #{maxKey}
        </if>
    </update>

    <!--拼接批次号, 获取批次索引最大值-->
    <select id="getBatchIndex" resultType="java.lang.Integer">
        select max(batch_index) from pull_batch where wh_id = #{whId}
    </select>

    <!--根据订单ids批量获取订单拣货状态-->
    <select id="getPullStatusByOrderIds" resultType="java.lang.Integer">
        select pull_status from out_order where id in
        <foreach collection="ids" close=")" open="(" item="row" separator="," index="">
            #{row}
        </foreach>
    </select>
</mapper>
