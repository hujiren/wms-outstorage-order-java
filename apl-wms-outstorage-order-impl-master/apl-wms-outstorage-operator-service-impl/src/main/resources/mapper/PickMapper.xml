<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.apl.wms.outstorage.operator.dao.PickMapper">

    <!-- 分页查找 第2步, 根据ids查找订单列表-->
    <select id="getListByOrderSns" parameterType="java.util.List"  resultType="com.apl.wms.outstorage.operator.pojo.vo.OutOrderPickListVo">
        SELECT
            id as orderId,
            order_sn,
            order_status,
            pull_status,
            cr_time,
            wh_id,
            customer_id,
            pull_operator_id,
            order_from
        FROM
            out_order
        where
        order_sn in (
            <foreach collection="orderSns" open="" separator="," close="" item="row" index="">
                #{row}
            </foreach>
        )
    </select>


    <select id="queryOrderPickInfoByPage" resultType="com.apl.wms.outstorage.operator.pojo.vo.OutOrderPickListVo">
        SELECT
            id as orderId,
            order_sn,
            order_status,
            pull_status,
            cr_time,
            customer_id,
            pull_operator_id,
            order_from
        FROM
            out_order
        <where>

            order_status = 3  and pull_status >= 3  and wh_id = ${kd.whId}

            <if test="kd.terminal==1">

                <!-- 从PC查询 -->
                <if test="kd.customerId != null and kd.customerId>0">
                    and customer_id = #{kd.customerId}
                </if>

                <!-- 模糊搜索订单号 -->
                <if test="kd.orderSn != null and kd.orderSn != ''">
                    and locate(#{kd.orderSn} , order_sn) > 0
                </if>

                <!--指定拣货员-->
                <if test="kd.pullStatus != 3 and (kd.pullOperatorId != null and kd.pullOperatorId > 0)">
                    and pull_operator_id = #{kd.pullOperatorId}
                </if>

                <!--如果拣货状态等于3 表示未分配拣货员 查询拣货员id为0的所有信息-->
                <if test="kd.pullStatus == 3 ">
                    and pull_operator_id = 0
                </if>

                <!--如果拣货状态等于4 表示已分配拣货员 查询拣货员Id大于0的所有信息-->
                <if test="kd.pullStatus == 4 ">
                    and pull_operator_id > 0
                </if>

                <if test="kd.pullStatus > 4 ">
                    and pull_status = #{kd.pullStatus}
                </if>
            </if>

            <if test="kd.terminal==2">
                <!-- 从PDA查询 -->

                and pull_operator_id = #{kd.pullOperatorId}

                <!--未拣货-->
                <if test="kd.pullStatus == 4 ">
                    and pull_status &lt; 6
                </if>

                <!--已拣货-->
                <if test="kd.pullStatus == 6 ">
                    and pull_status &gt;= 6
                </if>

            </if>

        </where>

    </select>


    <!--更新订单状态为4 已分配拣货员-->
    <update id="updateOrderPickingMember">

        update out_order
            set pull_status = 4, pull_operator_id = ${pullOperatorId}
        where
            id in (
            <foreach collection="ids" open="" separator="," close="" item="row">
                ${row}
            </foreach>
            )

    </update>


    <!--根据批次id获取批次下的订单id-->
    <select id="getOrderIdsByBatchId" resultType="java.lang.Long">
        select order_id from pull_batch_order where batch_id = #{batchId}
    </select>


    <!--批量修改订单拣货状态-->
    <update id="updatePullStatus">
        update out_order set pull_status = #{pullStatus} where id in (${ids})
        <if test="maxKey > 0 and minKey > 0">
            and id between #{minKey} and #{maxKey}
        </if>
    </update>


    <!--根据批次id修改批次的状态和时间-->
    <update id="updateBatchByBatchId">
        update pull_batch set pull_finish_time = #{po.pullFinishTime}, pull_status = #{po.pullStatus} where id = #{po.id}
    </update>


    <!--批量插入批次商品信息对象-->
    <insert id="batchInsertPullBatchCommodity">
        <foreach collection="list" index="" separator=";" item="row" close="" open="">
            insert into pull_batch_commodity(id, batch_id, commodity_id, storage_local_id, pull_qty)
            values (#{row.id}, #{row.batchId}, #{row.commodityId}, #{row.storageLocalId}, #{row.pullQty})
        </foreach>
    </insert>


    <!--根据商品id批量关联查询订单号和订单Id-->
    <select id="getOrderSnByCommodityId" resultType="com.apl.wms.outstorage.operator.pojo.bo.CorrelateCommodityBo">
        select
            pbc.commodity_id,
            pbo.order_id,
            oo.order_sn
        from
            pull_batch_commodity pbc
        LEFT JOIN
            pull_batch_order pbo on pbc.batch_id = pbo.batch_id
        LEFT JOIN
            out_order oo on pbo.order_id = oo.id
        where pbc.commodity_id in
            <foreach collection="list" index="" separator="," item="row" open="("  close=")">
                ${row}
            </foreach>
    </select>


    <!--根据订单id批量查询商品信息关联订单信息-->
    <select id="getCommodityInfoByOrderIds"
            resultType="com.apl.wms.outstorage.operator.pojo.bo.CorrelateCommodityOrderBo">
        select
            ooc.order_id,
            ooc.commodity_id,
            ooc.order_qty,
            oo.order_sn
        from
            out_order_commodity_item ooc
        left JOIN
            out_order oo on ooc.order_id = oo.id
        where
            ooc.order_id in
        <foreach collection="ids" open="(" close=")" item="row" separator="," index="">
            #{row}
        </foreach>
    </select>

    <!--根据订单ids查询订单拣货状态-->
    <select id="getPullStatusByOrderIds" resultType="java.lang.Integer">
        select pull_status from out_order where id in
        <foreach collection="orderIds" index="" separator="," item="row" open="(" close=")">
            #{row}
        </foreach>
    </select>

</mapper>