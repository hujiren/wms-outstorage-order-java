<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.apl.wms.outstorage.order.dao.PullAllocationItemMapper">
    <delete id="deleteByOrderId">
        delete from pull_allocation_item where out_order_id = #{outOrderId};
    </delete>


    <!-- 查找详情 2020-06-09-->
    <select id="listPullItemByBatchId" resultType="com.apl.wms.outstorage.operator.pojo.vo.PullAllocationItemInfoVo">
        SELECT
          id, 
          batch_id, 
          out_order_id, 
          commodity_id, 
          storage_local_id,
          allocation_qty
        FROM
          pull_allocation_item
        where
          batch_id = #{batchId}
    </select>

    <!-- 查找详情 2020-06-09-->
    <select id="getById" resultType="com.apl.wms.outstorage.operator.pojo.vo.PullAllocationItemInfoVo">
        SELECT
          id,
          batch_id,
          out_order_id,
          commodity_id,
          storage_local_id,
          allocation_qty
        FROM
          pull_allocation_item
        where
          id = #{id}
    </select>

    <!-- 查找列表 2020-06-09-->
    <select id="getList" resultType="com.apl.wms.outstorage.operator.pojo.vo.PullAllocationItemListVo">
        SELECT
           id, 
           batch_id, 
           out_order_id, 
           commodity_id, 
           storage_local_id,
           allocation_qty
        FROM
           pull_allocation_item
        where
        1 = 1
        order by id desc
    </select>

    <insert id="AllocOutOrderStockCallBack" parameterType="java.util.List">

        <foreach collection="itemPoList" separator=";" item="row" open="" close="" index="">
            insert into pull_allocation_item(id, out_order_id, commodity_id, storage_local_id, allocation_qty)
            values(#{row.id}, #{row.outOrderId}, #{row.commodityId}, #{row.storageLocalId}, #{row.allocationQty})
        </foreach>

    </insert>

    <!-- 将分配好的订单更新订单状态为已分配仓库 -->
    <update id="updateOrderStatus">
        update out_order set pull_status = #{status} where id = #{orderId}
    </update>


    <update id="updateOrdersStatus">
        update out_order set pull_status = #{status}
        where
        id in (${orderIds})
        <if test="minId != null and maxId != null">
            AND id BETWEEN ${minId} AND ${maxId}
        </if>
    </update>


    <update id="updatePullStatus">
        update out_order set pull_status = #{pullStatus} where id = #{outOrderId}
    </update>


    <select id="getCommodityInfoById" resultType="com.apl.wms.outstorage.order.lib.pojo.bo.AllocationWarehouseOrderCommodityBo">
        SELECT
            order_id,
            commodity_id,
            order_qty
        FROM
            out_order_commodity_item
        WHERE
           order_id=#{orderId}
    </select>


    <!-- 根据多个订单id, 批量获取订单中商品信息 -->
    <select id="getCommodityInfoByIds" resultType="com.apl.wms.outstorage.order.lib.pojo.bo.AllocationWarehouseOrderCommodityBo">
        SELECT
        order_id,
        commodity_id,
        order_qty
        FROM
        out_order_commodity_item
        WHERE
        order_id in (${orderIds})
        <if test="minId != null and maxId != null">
            AND order_id BETWEEN ${minId} AND ${maxId}
        </if>
    </select>


    <select id="getOutOrderInfoById" resultType="com.apl.wms.outstorage.order.lib.pojo.bo.AllocationWarehouseOutOrderBo">
        select
            id as orderId,
            wh_id,
            order_sn,
            order_status,
            pull_status
        from
            out_order
        WHERE
            id=#{orderId}
    </select>


    <select id="getOutOrderInfoByIds" resultType="com.apl.wms.outstorage.order.lib.pojo.bo.AllocationWarehouseOutOrderBo">
        select
        id as orderId,
        wh_id,
        order_sn,
        order_status,
        pull_status
        from
        out_order
        WHERE
        1=1
        <if test="minId != null and maxId != null">
            AND id BETWEEN ${minId} AND ${maxId}
        </if>
        and id in (${orderIds})
    </select>
    <select id="queryOrderPickInfoByPage"
            resultType="com.apl.wms.outstorage.operator.pojo.vo.OutOrderPickListVo">
        SELECT
        id as orderId,
        order_sn,
        order_status,
        pull_status,
        cr_time,
        customer_id,
        wh_id,
        order_from
        FROM
        out_order
        <where>
            1=1
            and
            order_status = 3
            <if test="kd.whId != null and kd.whId != 0">
                and wh_id = #{kd.whId}
            </if>

            <if test="kd.pullStatus != null and kd.pullStatus > 0">
                and pull_status = #{kd.pullStatus}
            </if>

            <if test="kd.customerId != null and kd.customerId !=''">
                and customer_id = #{kd.customerId}
            </if>

            <if test="kd.orderSn != null and kd.orderSn != ''">
                and locate(#{kd.orderSn} , order_sn) > 0
            </if>

        </where>

    </select>

</mapper>
